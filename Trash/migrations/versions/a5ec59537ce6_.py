"""empty message

Revision ID: a5ec59537ce6
Revises: f7a2c5ea890d
Create Date: 2022-11-29 13:54:28.799905

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a5ec59537ce6'
down_revision = 'f7a2c5ea890d'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('permission_numbers', schema=None) as batch_op:
        batch_op.drop_index('ix_permission_numbers_Assigned')
        batch_op.drop_index('ix_permission_numbers_course_name')
        batch_op.drop_index('ix_permission_numbers_student_id')

    op.drop_table('permission_numbers')
    with op.batch_alter_table('requests', schema=None) as batch_op:
        batch_op.drop_index('ix_requests_class_name')
        batch_op.drop_index('ix_requests_owner')
        batch_op.drop_index('ix_requests_professor_id')
        batch_op.drop_index('ix_requests_status')
        batch_op.drop_index('ix_requests_student_id')

    op.drop_table('requests')
    op.drop_table('college_course')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('college_course',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('course_name', sa.VARCHAR(length=20), nullable=True),
    sa.Column('professor_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['professor_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('requests',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.BOOLEAN(), nullable=True),
    sa.Column('class_name', sa.VARCHAR(length=64), nullable=True),
    sa.Column('professor_id', sa.INTEGER(), nullable=True),
    sa.Column('student_id', sa.INTEGER(), nullable=True),
    sa.Column('owner', sa.INTEGER(), nullable=True),
    sa.Column('permission_number', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['owner'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('requests', schema=None) as batch_op:
        batch_op.create_index('ix_requests_student_id', ['student_id'], unique=False)
        batch_op.create_index('ix_requests_status', ['status'], unique=False)
        batch_op.create_index('ix_requests_professor_id', ['professor_id'], unique=False)
        batch_op.create_index('ix_requests_owner', ['owner'], unique=False)
        batch_op.create_index('ix_requests_class_name', ['class_name'], unique=False)

    op.create_table('permission_numbers',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('permission_number', sa.INTEGER(), nullable=True),
    sa.Column('Assigned', sa.BOOLEAN(), nullable=True),
    sa.Column('course_name', sa.VARCHAR(), nullable=True),
    sa.Column('student_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['course_name'], ['college_course.course_name'], ),
    sa.ForeignKeyConstraint(['student_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('permission_numbers', schema=None) as batch_op:
        batch_op.create_index('ix_permission_numbers_student_id', ['student_id'], unique=False)
        batch_op.create_index('ix_permission_numbers_course_name', ['course_name'], unique=False)
        batch_op.create_index('ix_permission_numbers_Assigned', ['Assigned'], unique=False)

    # ### end Alembic commands ###
